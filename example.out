; ModuleID = 'compyle'
source_filename = "compyle"

@0 = private unnamed_addr constant [5 x i8] c"nope\00", align 1
@intgsp = private unnamed_addr constant [3 x i8] c"%d\00", align 1

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %y = alloca i32, align 4
  store i32 0, i32* %y, align 4
  br label %while

while:                                            ; preds = %elihw6, %entry
  %y1 = load i32, i32* %y, align 4
  %tmp = icmp sle i32 %y1, 10
  br i1 %tmp, label %while_body, label %elihw

while_body:                                       ; preds = %while
  br label %while2

elihw:                                            ; preds = %while
  br label %while19

while2:                                           ; preds = %elihw11, %while_body
  %y3 = load i32, i32* %y, align 4
  %tmp4 = icmp sle i32 %y3, 10
  br i1 %tmp4, label %while_body5, label %elihw6

while_body5:                                      ; preds = %while2
  br label %while7

elihw6:                                           ; preds = %while2
  br label %while

while7:                                           ; preds = %fi, %while_body5
  %y8 = load i32, i32* %y, align 4
  %tmp9 = icmp sle i32 %y8, 10
  br i1 %tmp9, label %while_body10, label %elihw11

while_body10:                                     ; preds = %while7
  br i1 false, label %then, label %else

elihw11:                                          ; preds = %while7
  br label %while2

then:                                             ; preds = %while_body10
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0))
  br label %fi

else:                                             ; preds = %while_body10
  br i1 true, label %then12, label %else13

fi:                                               ; preds = %then, %fi14
  br label %while7

then12:                                           ; preds = %else
  br i1 true, label %then15, label %else16

else13:                                           ; preds = %else
  br label %fi14

fi14:                                             ; preds = %else13, %fi17
  br label %fi

then15:                                           ; preds = %then12
  %0 = load i32, i32* %y, align 4
  %tmp18 = add i32 %0, 1
  store i32 %tmp18, i32* %y, align 4
  br label %fi17

else16:                                           ; preds = %then12
  br label %fi17

fi17:                                             ; preds = %else16, %then15
  br label %fi14

while19:                                          ; preds = %while_body22, %elihw
  %y20 = load i32, i32* %y, align 4
  %tmp21 = icmp sle i32 %y20, 100
  br i1 %tmp21, label %while_body22, label %elihw23

while_body22:                                     ; preds = %while19
  %1 = load i32, i32* %y, align 4
  %tmp24 = add i32 %1, 1
  store i32 %tmp24, i32* %y, align 4
  br label %while19

elihw23:                                          ; preds = %while19
  %y25 = load i32, i32* %y, align 4
  %printf26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @intgsp, i32 0, i32 0), i32 %y25)
  ret i32 0
}
